자료구조

Time Complexity: 데이터 구조의 오퍼레이션 or 알고리즘이 얼마나 빠르고 느린지 상대적으로 측정하는 방법. 얼마나 많은 단계(step)가 있는가를 측정한다.

메모리는 volatile, non-volatile 두 종류로 나뉘어져 있다.
non-volatile 메모리는 비휘발성이므로 여기에 들어있는 데이터는 컴퓨터를 껐다켜도 그대로 남아있다. (ex. 하드 드라이브)
volatile 메모리는 휘발성이므로 컴퓨터를 끄면 들어있는 데이터가 전부 사라진다. 프로그래밍에서 사용하는 변수같은 것들이 여기에 저장된다. (ex. RAM:Ramdom Access Memory)

RAM은 데이터 접속을 랜덤으로 할 수 있기 때문에 데이터를 읽을 때, 하드 드라이브에서 읽는 것보다 빠르다.(순차적X, 원하는 곳을 바로 읽기 가능)

1. 배열
배열은 메모리 상에서 나란히 이어져 있게 공간이 할당된다.
0부터 시작하는 index를 사용해 순차적으로 번호지정이 가능하다.
크기가 정해져 있어 시작 위치, 최대 길이를 알 수 있다.
배열의 각 데이터는 element이다.

네 가지 오퍼레이션 Reading, Searching, Insert, Delete

1-1. Reading
배열은 index를 사용해 0부터 읽으며, 컴퓨터는 배열이 어디서 시작하는지 알기 때문에 Read가 빠르다.
배열이 얼마나 긴지 상관없이 index에서 element를 읽어내는 속도는 동일해서 많은 자료를 읽을 때 배열이 좋다.

1-2. Searching
데이터를 읽을 때 그냥 값을 받아오면 되는 것과는 달리, 원하는 값이 배열에 들어 있는지, 어디에 있는지를 모르기 때문에 배열의 아이템을 하나하나 체크해봐야 한다.
배열을 index 0부터 선형적으로 탐색하면 시간이 오래 걸린다는 단점이 있다.
